#!/bin/bash
#
# Installs the prerequisites required by NadekoBot on Linux distributions.
#
# Comment Key:
#   - A.1.: Apt uses its own signal handlers, so this script's traps cannot immediately
#     intercept signals (e.g., SIGINT) during the apt operation. To address this, apt is
#     run in the background, and its process ID is stored in $apt_pid. If a signal is
#     caught, the script terminates the 'apt' process and exits.
#
########################################################################################
####[ Global Variables ]################################################################


readonly C_MUSIC_PREREQS=("libopus0" "opus-tools" "libopus-dev" "libsodium-dev"
    "python3" "ffmpeg")
readonly C_OTHER_PREREQS=("redis-server" "ccze" "apt-transport-https" "ffmpeg" "jq")


####[ Functions ]#######################################################################


####
# Cleanly exits the script by terminating the 'apt' process (if running) and showing an
# appropriate message based on the exit code.
#
# PARAMETERS:
#   - $1: exit_code (Required)
#       - The exit code passed by the caller. This may be changed to 50 in certain cases
#         (e.g., exit codes 1 or 130) to allow a parent installer script to continue.
#   - $2: use_extra_newline (Optional, Default: false)
#       - If "true", outputs an extra blank line to separate previous output from the
#         exit message.
#       - Valid values:
#           - true
#           - false
#
# EXITS:
#   - $exit_code: The final exit code, which may be 50 if conditions for continuing are
#     met.
clean_exit() {
    local exit_code="$1"
    local use_extra_newline="${2:-false}"
    local exit_now=false

    trap - EXIT SIGINT
    [[ $use_extra_newline == true ]] && echo ""

    ## The exit code may become 50 if 'nadeko-latest-installer' should continue despite
    ## an error. See 'exit_code_actions' for more details.
    case "$exit_code" in
        1) exit_code=50 ;;
        0|5) ;;
        129)
            echo -e "\n${E_WARN}Hangup signal detected (SIGHUP)"
            exit_now=true
            ;;
        130)
            echo -e "\n${E_WARN}User interrupt detected (SIGINT)"
            exit_code=50
            ;;
        143)
            echo -e "\n${E_WARN}Termination signal detected (SIGTERM)"
            exit_now=true
            ;;
        *)
            echo -e "\n${E_WARN}Exiting with exit code: $exit_code"
            exit_now=true
            ;;
    esac

    if [[ $apt_pid ]]; then
        echo "${E_INFO}Cleaning up..."
        sudo kill "$apt_pid" &>/dev/null
    fi

    if [[ $exit_now == false ]]; then
        read -rp "${E_NOTE}Press [Enter] to return to the main menu"
    fi

    exit "$exit_code"
}

####
# Installs 'yt-dlp' to '~/.local/bin/yt-dlp', creating the directory if needed.
#
# EXITS:
#   - 1: If 'yt-dlp' fails to download.
install_yt_dlp() {
    local yt_dlp_url="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp"
    local yt_dpl_dir="${E_YT_DLP_PATH%/*}"

    [[ -d $yt_dpl_dir ]] || mkdir -p "$yt_dpl_dir"

    if [[ ! -f $E_YT_DLP_PATH ]]; then
        echo "${E_INFO}Installing 'yt-dlp'..."
        curl -L "$yt_dlp_url" -o "$E_YT_DLP_PATH" \
            || E_STDERR "Failed to download 'yt-dlp'" "1"
    fi

    echo "${E_INFO}Modifying permissions for 'yt-dlp'..."
    chmod a+rx "$E_YT_DLP_PATH"
}

####
# Installs all prerequisites required by NadekoBot. Runs 'apt' in the background so
# signals (e.g., SIGINT) can be caught, allowing the script to terminate 'apt' if
# needed.
#
# NEW GLOBALS:
#   - apt_pid: The process ID of the 'apt' process, killed if the script exits.
#
# EXITS:
#   - 0: Successful installation of all prerequisites.
#   - 1: Failed to add Microsoft's package signing key.
#   - $?: Failed to install prerequisites or remove existing .NET installation.
install_prereqs() {
    (   ## A.1.
        echo "${E_INFO}Updating package lists..."
        sudo apt update  || exit $?

        echo "${E_INFO}Installing music prerequisites..."
        sudo apt install -y "${C_MUSIC_PREREQS[@]}" || exit $?

        install_yt_dlp

        echo "${E_INFO}Installing other prerequisites..."
        sudo apt install -y "${C_OTHER_PREREQS[@]}" || exit $?

    ) &
    apt_pid=$!
    wait $apt_pid || E_STDERR "Failed to install all prerequisites" $?
    unset apt_pid

    echo -e "\n${E_SUCCESS}Finished installing prerequisites"
    clean_exit 0 "true"
}

####
# Displays a message indicating that the current OS is unsupported for automatic
# NadekoBot prerequisite installation.
#
# EXITS:
#   - 4: The current OS is unsupported.
unsupported() {
    echo "${E_ERROR}The installer does not support the automatic installation and" \
        "setup of NadekoBot's prerequisites for your OS: $E_DISTRO $E_VER $E_ARCH" >&2
    read -rp "${E_NOTE}Press [Enter] to return to the main menu"
    exit 4
}


####[ Trapping Logic ]##################################################################


trap 'clean_exit "129"' SIGHUP
trap 'clean_exit "130"' SIGINT
trap 'clean_exit "143"' SIGTERM
trap 'clean_exit "$?"'  EXIT


####[ Main ]############################################################################


printf "%sWe will now install NadekoBot's prerequisites. " "$E_NOTE"
read -rp "Press [Enter] to continue."

case "$E_DISTRO-$E_VER" in
    ubuntu-24.04|ubuntu-22.04|debian-12|debian-11|linuxmint-22|linuxmint-21)
        install_prereqs ;;
    *)
        unsupported ;;
esac
