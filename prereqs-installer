#!/bin/bash
#
# Install the packages and dependencies required for NadekoBot to run on Linux.
#
# Comment key:
#   A.1. - NOTE: If the write perms are not applied to all users for this tool, attempts
#                to update 'youtube-dl' by a non-root user will always fail.
#   B.1. - FIXME: Find a better solution than modifying the perms in such a way that I
#                 have.
#
########################################################################################
#### [ Functions ]


install_prereqs() {
    ####
    # Install the packages and dependencies required by NadekoBot, on all compatible
    # Linux distributions.
	#
    # Arguments:
    # 	$1 - required
    #       Distribution name.
    # 	$2 - required
    #       Distribution version.
    #   $3 - required
    #       'python' or 'python-is-python3' (dependent on the distro version).
    #   $4 - optional
    #       True if .NET preferences must be set.
    ####

    echo "Installing .NET Core..."
    ## Microsoft package signing key.
    curl -O https://packages.microsoft.com/config/"$1"/"$2"/packages-microsoft-prod.deb
    sudo dpkg -i packages-microsoft-prod.deb
    sudo rm -f packages-microsoft-prod.deb

    ## Ensure that .NET SDK is correctly installed on specific versions of Linux.
    if [[ $4 = true ]]; then
        if hash dotnet &>/dev/null && [[ ! $(dotnet --version &>/dev/null) ]]; then
            echo "${_YELLOW}While the .NET runtime is installed, the .NET SDK is not${_NC}"
            echo "Uninstalling existing .NET Core 6.0 installation..."
            sudo apt remove dotnet-sdk-6.0 -y
            sudo apt autoremove -y

            if [[ ! -f /etc/apt/preferences.d/custom-dotnet.pref ]]; then
                echo "Upating prefered .NET Core install method..."

                {
                    echo -e "Explanation: https://github.com/dotnet/core/issues/7699" \
                        "\nPackage: *" \
                        "\nPin: origin \"packages.microsoft.com\"" \
                        "\nPin-Priority: 1001" | sudo tee /etc/apt/preferences.d/custom-dotnet.pref
                } || {
                    echo "${_RED}Failed to create" \
                        "'/etc/apt/preferences.d/custom-dotnet.pref'${_NC}" >&2
                    exit 1
                }

                echo "Reinstalling .NET Core..."
            fi
        fi
    fi

    ## Install the SDK.
    sudo apt-get update \
        && sudo apt-get install -y dotnet-sdk-6.0

    ## Install music prerequisites.
    echo "Installing music prerequisites..."
    sudo apt-get install libopus0 opus-tools libopus-dev libsodium-dev -y

    ## Other prerequisites.
    echo "Installing other prerequisites..."
    sudo apt-get install ffmpeg redis-server git ccze apt-transport-https python3 "$3" -y
    sudo curl -s -L https://yt-dl.org/downloads/latest/youtube-dl -o \
        /usr/local/bin/youtube-dl
    # A.1. & B.1.
    sudo chmod a+rwx /usr/local/bin/youtube-dl
}

unsupported() {
    ####
    # Informs the end-user that their system is not supported by the automatic
    # installation of the prerequisites.
    #
    # Arguments:
    #   None
    ####

    echo "${_RED}The installer does not support the automatic installation and setup" \
        "of NadekoBot's prerequisites for your OS: $_DISTRO $_VER ${_ARCH}${_NC}"
    read -rp "Press [Enter] to return to the installer menu"
    exit 3
}


#### End of [ Functions ]
########################################################################################
#### [ Main ]


read -rp "We will now install NadekoBot's prerequisites. Press [Enter] to continue."

if [[ $_DISTRO = "ubuntu" ]]; then
    case "$_VER" in
        22.04) install_prereqs "ubuntu" "$_VER" "python-is-python3" "true" ;;
        20.04) install_prereqs "ubuntu" "$_VER" "python-is-python3" ;;
        18.04) install_prereqs "ubuntu" "$_VER" "python" ;;
        *)     unsupported ;;
    esac
elif [[ $_DISTRO = "debian" ]]; then
    case "$_SVER" in
        11) install_prereqs "debian" "$_SVER" "python-is-python3" ;;
        10) install_prereqs "debian" "$_SVER" "python" ;;
        *)  unsupported ;;
    esac
elif [[ $_DISTRO = "linuxmint" ]]; then
    case "$_SVER" in
        21) install_prereqs "ubuntu" "22.04" "python-is-python3" "true" ;;
        20) install_prereqs "ubuntu" "20.04" "python-is-python3" ;;
        *)  unsupported ;;
    esac
fi

echo -e "\n${_GREEN}Finished installing prerequisites${_NC}"
read -rp "Press [Enter] to return to the installer menu"


#### End of [ Main ]
########################################################################################
