#!/bin/bash
#
# Install the packages and dependencies required for NadekoBot to run on Linux.
#
# Comment key:
#   A.1. - NOTE: If the write perms are not applied to all users for this tool, attempts
#                to update 'youtube-dl' by a non-root user will always fail.
#   B.1. - FIXME: Find a better solution than modifying the perms in such a way that I
#                 have.
#
########################################################################################
####[ Functions ]#######################################################################


####
# Install the packages and dependencies required by NadekoBot, on all compatible
# Linux distributions.
#
# PARAMETERS:
# 	- $1: distro_name (Required)
#       Distribution name.
# 	- $2: distro_ver (Required)
#       Distribution version.
#   - $3: python_pkg (Required)
#       'python' or 'python-is-python3' (dependent on the distro version).
#   - $4: dotnet_pref (Optional, Default: false)
#       True if .NET preferences must be set.
install_prereqs() {
    local distro_name="$1"
    local distro_ver="$2"
    local python_pkg="$3"
    local dotnet_pref="${4:-false}"

    echo "Installing .NET Core..."
    ## Microsoft package signing key.
    curl -O https://packages.microsoft.com/config/"$distro_name"/"$distro_ver"/packages-microsoft-prod.deb
    sudo dpkg -i packages-microsoft-prod.deb
    sudo rm -f packages-microsoft-prod.deb

    ## Ensure that .NET SDK is correctly installed on specific versions of Linux.
    if [[ $dotnet_pref == true ]]; then
        if (hash dotnet &>/dev/null && [[ ! $(dotnet --version) ]]) &>/dev/null; then
            echo "${E_YELLOW}While the .NET runtime is installed, the .NET SDK is not${E_NC}"
            echo "Uninstalling existing .NET Core installation..."
            sudo apt remove -y dotnet-sdk-6.0
            sudo apt autoremove -y
        fi

        if [[ ! -f /etc/apt/preferences.d/custom-dotnet.pref ]]; then
            echo "Updating preferred .NET Core install method..."
            echo -e "Explanation: https://github.com/dotnet/core/issues/7699" \
                "\nPackage: *" \
                "\nPin: origin \"packages.microsoft.com\"" \
                "\nPin-Priority: 1001" | sudo tee /etc/apt/preferences.d/custom-dotnet.pref \
                || E_STDERR "Failed to create '/etc/apt/preferences.d/custom-dotnet.pref'" "1"
            echo "Reinstalling .NET Core..."
        fi
    fi

    ## Install the SDK.
    sudo apt update && sudo apt install -y dotnet-sdk-6.0

    ## Install music prerequisites.
    echo "Installing music prerequisites..."
    sudo apt install -y libopus0 opus-tools libopus-dev libsodium-dev

    ## Other prerequisites.
    echo "Installing other prerequisites..."
    sudo apt install -y redis-server git ccze apt-transport-https ffmpeg python3 "$python_pkg"
    sudo curl -s -L https://yt-dl.org/downloads/latest/youtube-dl -o  /usr/local/bin/youtube-dl
    sudo chmod a+rwx /usr/local/bin/youtube-dl  # A.1. & B.1.
}

####
# Inform the end-user that their system is not supported by the automatic installation
# of the prerequisites.
unsupported() {
    echo "${E_RED}The installer does not support the automatic installation and setup" \
        "of NadekoBot's prerequisites for your OS: $E_DISTRO $E_VER ${E_ARCH}${E_NC}"
    read -rp "Press [Enter] to return to the installer menu"
    exit 3
}


####[ Main ]############################################################################


read -rp "We will now install NadekoBot's prerequisites. Press [Enter] to continue."

if [[ $E_DISTRO == "ubuntu" ]]; then
    case "$E_VER" in
        22.04) install_prereqs "ubuntu" "$E_VER" "python-is-python3" "true" ;;
        20.04) install_prereqs "ubuntu" "$E_VER" "python-is-python3" ;;
        18.04) install_prereqs "ubuntu" "$E_VER" "python" ;;
        *)     unsupported ;;
    esac
elif [[ $E_DISTRO == "debian" ]]; then
    case "$E_SVER" in
        11) install_prereqs "debian" "$E_SVER" "python-is-python3" ;;
        10) install_prereqs "debian" "$E_SVER" "python" ;;
        *)  unsupported ;;
    esac
elif [[ $E_DISTRO == "linuxmint" ]]; then
    case "$E_SVER" in
        21) install_prereqs "ubuntu" "22.04" "python-is-python3" "true" ;;
        20) install_prereqs "ubuntu" "20.04" "python-is-python3" ;;
        *)  unsupported ;;
    esac
fi

echo -e "\n${E_GREEN}Finished installing prerequisites${E_NC}"
read -rp "Press [Enter] to return to the installer menu"
