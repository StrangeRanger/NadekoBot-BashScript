#!/bin/bash
#
# Download and update NadekoBot.
#
# Comment Key:
#   A.1. - Due to permission errors cropping up every now and then, especially when the
#          installer is executed with root privilege then later as a non-root user, it's
#          necessary to make sure that '/tmp/NuGetScratch' and '/home/$USER/.nuget' are
#          owned by the user that the installer is currently being run under.
#
########################################################################################
####[ Variables ]#######################################################################


export DOTNET_CLI_TELEMETRY_OPTOUT=1  # Used when compiling code.

service_is_active=false
current_creds="nadekobot/output/creds.yml"
new_creds="nadekobot_tmp/nadekobot/output/creds.yml"
current_database="nadekobot/output/data/NadekoBot.db"
new_database="nadekobot_tmp/nadekobot/output/data/NadekoBot.db"
current_data="nadekobot/output/data"
new_data="nadekobot_tmp/nadekobot/output/data"


####[ Main ]############################################################################


read -rp "We will now download/update NadekoBot. Press [Enter] to begin."

###
### [ Stop Service ]]
###

## Stop the service if it's currently running.
if [[ $E_SERVICE_STATUS = "active" ]]; then
    service_is_active=true
    E_STOP_SERVICE
fi


###
### [ Create Backup and Update ]
###

## Create a temporary folder to download NadekoBot into.
mkdir nadekobot_tmp
cd nadekobot_tmp || E_STDERR "Failed to change working directory" "1"

echo "Downloading NadekoBot into 'nadekobot_tmp'..."
git clone -b "$E_BOT_INSTALL_VERSION" --recursive --depth 1 https://gitlab.com/Kwoth/nadekobot \
    || E_STDERR "Failed to download NadekoBot" "1"

## A.1.
if [[ -d /tmp/NuGetScratch ]]; then
    echo "Modifying ownership of '/tmp/NuGetScratch'..."
    sudo chown -R "$USER":"$USER" /tmp/NuGetScratch \
        || E_STDERR "Failed to to modify the ownership of '/tmp/NuGetScratch'" "1"
fi

## A.1.
if [[ -d  /home/$USER/.nuget ]]; then
    echo "Modifying ownership of '/home/$USER/.nuget'..."
    sudo chown -R "$USER":"$USER" /home/"$USER"/.nuget \
        || E_STDERR "Failed to to modify the ownership of '/home/$USER/.nuget'..." "1"
fi

echo "Building NadekoBot..."
# shellcheck disable=SC2015
cd nadekobot \
    && dotnet restore -f --no-cache \
    && dotnet build src/NadekoBot/NadekoBot.csproj -c Release -o output/ \
    && cd "$E_WORKING_DIR" \
    || E_STDERR "Failed to build NadekoBot" "1"

## Move credentials, database, and other data to the new version of NadekoBot.
if [[ -d nadekobot_tmp/nadekobot && -d nadekobot ]]; then
    echo "Copying 'creds.yml' to the new version..."
    cp -f "$current_creds" "$new_creds" &>/dev/null
    echo "Copying database to the new version..."
    cp -RT "$current_database" "$new_database" &>/dev/null

    echo "Copying other data to the new version..."

    #### The end-user will have to manually re-add their strings after each update as
    #### updates may cause a number of strings to become obsolete, changed, etc.
    #### However, old user's strings will be backed up as strings_old.

    ## Back up new strings to reverse rewrite.
    rm -rf "$new_data"/strings_new &>/dev/null
    mv -fT "$new_data"/strings "$new_data"/strings_new

    ## Delete old string backups.
    rm -rf "$current_data"/strings_old &>/dev/null
    rm -rf "$current_data"/strings_new &>/dev/null

    # Back up new aliases to reverse rewrite.
    mv -f "$new_data"/aliases.yml "$new_data"/aliases_new.yml

    # Move old data folder contents (and overwrite).
    cp -RT "$current_data" "$new_data"

    # Back up old aliases.
    mv -f "$new_data"/aliases.yml "$new_data"/aliases_old.yml
    # Restore new aliases.
    mv -f "$new_data"/aliases_new.yml "$new_data"/aliases.yml

    # Back up old strings.
    mv -f "$new_data"/strings "$new_data"/strings_old
    # Restore new strings.
    mv -f "$new_data"/strings_new "$new_data"/strings

    rm -rf nadekobot_old && mv -f nadekobot nadekobot_old
fi

mv nadekobot_tmp/nadekobot . && rmdir nadekobot_tmp

###
### [ Clean Up and Present Results ]
###

echo -e "\n${E_GREEN}Finished downloading/updating NadekoBot${E_NC}"

if "$service_is_active"; then
    echo "${E_CYAN}NOTE: '$E_SERVICE_NAME' was stopped to update NadekoBot and" \
        "needs to be started using one of the run modes in the installer menu${E_NC}"
fi

read -rp "Press [Enter] to apply any existing changes to the installers"
