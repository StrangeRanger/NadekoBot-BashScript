#!/bin/bash
#
# This script downloads and updates NadekoBot.
#
# Comment Key:
#   - A.1.: To prevent permission errors that can occur, especially when the installer
#       is run with root privileges and later as a non-root user, it's necessary to
#       ensure that '/tmp/NuGetScratch' and '/home/$USER/.nuget' are owned by the user
#       currently running the installer.
#
########################################################################################
####[ Variables ]#######################################################################


export DOTNET_CLI_TELEMETRY_OPTOUT=1  # Used when compiling code.

readonly C_NADEKOBOT_URL="https://gitlab.com/Kwoth/nadekobot"
readonly C_CURRENT_CREDS="nadekobot/output/creds.yml"
readonly C_NEW_CREDS="nadekobot_tmp/nadekobot/output/creds.yml"
readonly C_CURRENT_DATABASE="nadekobot/output/data/NadekoBot.db"
readonly C_NEW_DATABASE="nadekobot_tmp/nadekobot/output/data/NadekoBot.db"
readonly C_CURRENT_DATA="nadekobot/output/data"
readonly C_NEW_DATA="nadekobot_tmp/nadekobot/output/data"

service_is_active=false


####[ Main ]############################################################################


read -rp "${E_NOTE}We will now download/update NadekoBot. Press [Enter] to begin."

###
### [ Stop Service ]
###

## Stop the service if it's currently running.
if [[ $E_SERVICE_STATUS == "active" ]]; then
    service_is_active=true
    E_STOP_SERVICE
fi


###
### [ Create Backup and Update ]
###

## Create a temporary folder to download NadekoBot into.
mkdir nadekobot_tmp
cd nadekobot_tmp || E_STDERR "Failed to change working directory" "1"

echo "${E_INFO}Downloading NadekoBot into 'nadekobot_tmp'..."
git clone -b "$E_BOT_INSTALL_VERSION" --recursive --depth 1 "$C_NADEKOBOT_URL" \
    || E_STDERR "Failed to download NadekoBot" "1"

## A.1.
if [[ -d /tmp/NuGetScratch ]]; then
    echo "${E_INFO}Modifying ownership of '/tmp/NuGetScratch'..."
    sudo chown -R "$USER":"$USER" /tmp/NuGetScratch \
        || E_STDERR "Failed to to modify the ownership of '/tmp/NuGetScratch'" "1"
fi

## A.1.
if [[ -d  /home/$USER/.nuget ]]; then
    echo "${E_INFO}Modifying ownership of '/home/$USER/.nuget'..."
    sudo chown -R "$USER":"$USER" /home/"$USER"/.nuget \
        || E_STDERR "Failed to to modify the ownership of '/home/$USER/.nuget'..." "1"
fi

echo "${E_INFO}Building NadekoBot..."
# TODO: Improve the following line(s).
# shellcheck disable=SC2015
cd nadekobot \
    && dotnet restore -f --no-cache \
    && dotnet build src/NadekoBot/NadekoBot.csproj -c Release -o output/ \
    && cd "$E_WORKING_DIR" \
    || E_STDERR "Failed to build NadekoBot" "1"

## Move credentials, database, and other data to the new version of NadekoBot.
if [[ -d nadekobot_tmp/nadekobot && -d nadekobot ]]; then
    echo "${E_INFO}Copying 'creds.yml' to the new version..."
    cp -f "$C_CURRENT_CREDS" "$C_NEW_CREDS" &>/dev/null
    echo "${E_INFO}Copying database to the new version..."
    cp -RT "$C_CURRENT_DATABASE" "$C_NEW_DATABASE" &>/dev/null

    echo "${E_INFO}Copying other data to the new version..."

    ### IMPORTANT:
    ###     The end-user will have to manually re-add their strings after each update as
    ###     updates may cause a number of strings to become obsolete, changed, etc.
    ###     However, old user's strings will be backed up as strings_old.

    ## Back up new strings to reverse rewrite.
    rm -rf "$C_NEW_DATA"/strings_new &>/dev/null
    mv -fT "$C_NEW_DATA"/strings "$C_NEW_DATA"/strings_new

    ## Delete old string backups.
    rm -rf "$C_CURRENT_DATA"/strings_old &>/dev/null
    rm -rf "$C_CURRENT_DATA"/strings_new &>/dev/null

    # Back up new aliases to reverse rewrite.
    mv -f "$C_NEW_DATA"/aliases.yml "$C_NEW_DATA"/aliases_new.yml

    # Move old data folder contents (and overwrite).
    cp -RT "$C_CURRENT_DATA" "$C_NEW_DATA"

    # Back up old aliases.
    mv -f "$C_NEW_DATA"/aliases.yml "$C_NEW_DATA"/aliases_old.yml
    # Restore new aliases.
    mv -f "$C_NEW_DATA"/aliases_new.yml "$C_NEW_DATA"/aliases.yml

    # Back up old strings.
    mv -f "$C_NEW_DATA"/strings "$C_NEW_DATA"/strings_old
    # Restore new strings.
    mv -f "$C_NEW_DATA"/strings_new "$C_NEW_DATA"/strings

    rm -rf nadekobot_old && mv -f nadekobot nadekobot_old
fi

mv nadekobot_tmp/nadekobot . && rmdir nadekobot_tmp

###
### [ Clean Up and Present Results ]
###

echo -e "\n${E_SUCCESS}Finished downloading/updating NadekoBot${E_NC}"

if [[ $service_is_active == true ]]; then
    echo "${E_NOTE}'$E_SERVICE_NAME' was stopped to update NadekoBot and needs to be" \
        "started using one of the run modes in the installer menu${E_NC}"
fi

read -rp "${E_NOTE}Press [Enter] to apply any existing changes to the installers"
