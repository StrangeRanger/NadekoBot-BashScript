#!/bin/bash
#
# This script handles the transition between revision 47 and 48 of 'linuxAIO'.
#
########################################################################################
####[ Global Variables ]################################################################


# Using '.5' will ensure that when comparing revision numbers in 'n-update-bridge.bash',
# will never be equal to the current revision number. It also helps indicate that this
# is a transitional revision.
export E_CURRENT_LINUXAIO_REVISION=47.5

## Modify output text color.
E_YELLOW="$(printf '\033[1;33m')"
E_GREEN="$(printf '\033[0;32m')"
E_BLUE="$(printf '\033[0;34m')"
E_CYAN="$(printf '\033[0;36m')"
E_RED="$(printf '\033[1;31m')"
E_NC="$(printf '\033[0m')"
E_GREY="$(printf '\033[0;90m')"
E_CLR_LN="$(printf '\r\033[K')"
export E_YELLOW E_GREEN E_BLUE E_CYAN E_RED E_NC E_GREY E_CLR_LN

## Short-hand colorized messages.
E_SUCCESS="${E_GREEN}==>${E_NC} "
E_WARN="${E_YELLOW}==>${E_NC} "
E_ERROR="${E_RED}ERROR:${E_NC} "
E_INFO="${E_BLUE}==>${E_NC} "
E_NOTE="${E_CYAN}==>${E_NC} "
E_IMP="${E_CYAN}IMPORTANT:${E_NC} "
export E_SUCCESS E_WARN E_ERROR E_INFO E_NOTE E_IMP

export E_BOT_DIR="nadekobot"
export E_ROOT_DIR="$PWD"


####[ Functions ]#######################################################################


####
# Downloads the specified script from the $E_RAW_URL location and grants it executable
# permissions. Optionally displays a message indicating that the download is in
# progress.
#
# PARAMETERS:
#   - $1: script_name (Required)
#       - The name of the script to download.
#   - $2: script_output (Optional, Default: false)
#       - Whether to indicate that the script is being downloaded.
#       - Acceptable values:
#           - true
#           - false
E_DOWNLOAD_SCRIPT() {
    local script_name="$1"
    local script_output="${2:-false}"

    [[ $script_output == true ]] \
        && printf "%sDownloading '%s'..." "${E_INFO}" "$script_name"

    curl -O -s "$E_RAW_URL"/"$script_name"
    sudo chmod +x "$script_name"
}
export -f E_DOWNLOAD_SCRIPT

####
# Outputs an error message to stderr, optionally prints an additional message, and
# terminates the script if an exit code is provided.
#
# PARAMETERS:
#   - $1: error_message (Required)
#       - The main error message to display.
#   - $2: exit_code (Optional, Default: "")
#       - If provided, the script will exit with this code.
#   - $3: additional_message (Optional, Default: "")
#       - If provided, displays this message after the main error message.
#
# EXITS:
#   - exit_code: If specified, the script exits with the given exit code.
E_STDERR() {
    local error_message="$1"
    local exit_code="${2:-}"
    local additional_message="${3:-}"

    echo "${E_ERROR}$error_message" >&2
    [[ $additional_message ]] && echo -e "$additional_message" >&2
    [[ $exit_code ]] && exit "$exit_code"
}
export -f E_STDERR


####[ Trapping Logic ]##################################################################


trap 'clean_exit "129" "true"' SIGHUP
trap 'clean_exit "130" "true"' SIGINT
trap 'clean_exit "143" "true"' SIGTERM
trap 'clean_exit "$?" "true"' EXIT


####[ Main ]############################################################################


echo "${E_WARN}You are using an older version of 'linuxAIO'"

E_DOWNLOAD_SCRIPT "n-update-bridge.bash" "true"
./n-update-bridge.bash || clean_exit 1
clean_exit 0
